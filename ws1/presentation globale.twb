<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='sample_-_superstore_order' inline='true' name='federated.0s29g4f0n682ro1d7o0ic0vx91hs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sample_-_superstore' name='excel-direct.12loepy09kntda164itdk154h7s9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Utilisateur2/Documents/FORM-DEVIA/2-111223-190124 BUSINESS INTELLIGENCE-DATA MINING/5DataViz et tableau de bord/tableau/sample_-_superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.12loepy09kntda164itdk154h7s9' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.12loepy09kntda164itdk154h7s9' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.12loepy09kntda164itdk154h7s9' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B82B12A25C104765A2FA6A34C7B83D6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_C391A5FBC9EA4E18A44E6CECD4214AC9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_C391A5FBC9EA4E18A44E6CECD4214AC9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit (Order ID)' datatype='boolean' name='[Calculation_715509434945552386]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='/*calcul renta si positif la cde est rentable*/&#13;&#10;{ FIXED [Order ID]: SUM([Profit]) }&gt;0' />
        <aliases>
          <alias key='false' value='Non rentable' />
          <alias key='true' value='Rentable' />
        </aliases>
      </column>
      <column caption='Benef par cde' datatype='real' name='[Calculation_715509434950787076]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/COUNTD([Order ID])' />
      </column>
      <column caption='Vente par client' datatype='real' name='[Calculation_715509434951471109]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Sales])/COUNTD([Customer Name])' />
      </column>
      <column caption='Tx de rentabilité' datatype='real' name='[Calculation_879046395486003200]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' hidden='true' name='[Customer ID]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' hidden='true' name='[Product ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' hidden='true' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B82B12A25C104765A2FA6A34C7B83D6A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_C391A5FBC9EA4E18A44E6CECD4214AC9]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_715509434945552386]' derivation='None' name='[none:Calculation_715509434945552386:nk]' pivot='key' type='nominal' />
      <group caption='Infobulle (City,Country,State)' hidden='true' name='[Tooltip (City,Country,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Infobulle (Country,State)' hidden='true' name='[Tooltip (Country,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Emplacement geo'>
          <field>[State]</field>
          <field>[Country]</field>
          <field>[Region]</field>
          <field>[Postal Code]</field>
          <field>[City]</field>
        </drill-path>
        <drill-path name='Product'>
          <field>[Product Name]</field>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-hidden-fields='true' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
        <semantic-value key='[ZipCode].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Calculation_715509434945552386:nk]' direction='ASC'>
          <dictionary>
            <bucket>true</bucket>
            <bucket>false</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Calculation_715509434945716227' />
        <field-sort-custom-order field='Calculation_715509434945552386' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Calculation_715509434944577537' />
        <field-sort-custom-order field='Calculation_715509434944155648' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_B82B12A25C104765A2FA6A34C7B83D6A'>
            <properties context=''>
              <relation connection='excel-direct.12loepy09kntda164itdk154h7s9' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_C391A5FBC9EA4E18A44E6CECD4214AC9'>
            <properties context=''>
              <relation connection='excel-direct.12loepy09kntda164itdk154h7s9' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_B82B12A25C104765A2FA6A34C7B83D6A' />
            <second-end-point object-id='Returns_C391A5FBC9EA4E18A44E6CECD4214AC9' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Taux de rentabilité par zone geographique'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore_order' name='federated.0s29g4f0n682ro1d7o0ic0vx91hs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0s29g4f0n682ro1d7o0ic0vx91hs'>
            <column caption='Tx de rentabilité' datatype='real' name='[Calculation_879046395486003200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_879046395486003200]' derivation='User' name='[usr:Calculation_879046395486003200:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' num-steps='10' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:State:nk]' />
              <lod column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Country:nk]' />
              <lod column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:City:nk]' />
              <color column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Latitude (generated)]</rows>
        <cols>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{632C1CEB-D1B4-499C-AA18-5A6DCFB4DA5D}' />
    </worksheet>
    <worksheet name='Taux de rentabilité sur carte'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Taux de rentabilité(&lt;</run>
            <run>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:State:nk]</run>
            <run>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore_order' name='federated.0s29g4f0n682ro1d7o0ic0vx91hs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0s29g4f0n682ro1d7o0ic0vx91hs'>
            <column caption='Tx de rentabilité' datatype='real' name='[Calculation_879046395486003200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_879046395486003200]' derivation='User' name='[usr:Calculation_879046395486003200:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Longitude (generated)]' field-type='quantitative' max='-6570909.8900460023' min='-15748167.413968068' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Latitude (generated)]' field-type='quantitative' max='6662373.9900336098' min='2272428.0800620806' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' num-steps='10' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:State:nk]' />
              <lod column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Country:nk]' />
              <color column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' />
              <geometry column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' italic='true'>City:&#9;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' italic='true'>Country:&#9;</run>
                <run bold='true' italic='true'><![CDATA[<[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' italic='true'>State:&#9;</run>
                <run bold='true' italic='true'><![CDATA[<[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' italic='true'>Tx de rentabilité:&#9;</run>
                <run bold='true' italic='true'><![CDATA[<[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]> global]]></run>
                <run>Æ&#10;</run>
                <run bold='true'>Tx rent par ville</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Tx rent par ville" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Latitude (generated)]</rows>
        <cols>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1555AF67-4C50-4530-BF29-4F45252E7F01}' />
    </worksheet>
    <worksheet name='Tx rent par ville'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Taux de rentabilité par ville</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore_order' name='federated.0s29g4f0n682ro1d7o0ic0vx91hs' />
          </datasources>
          <datasource-dependencies datasource='federated.0s29g4f0n682ro1d7o0ic0vx91hs'>
            <column caption='Tx de rentabilité' datatype='real' name='[Calculation_879046395486003200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_879046395486003200]' derivation='User' name='[usr:Calculation_879046395486003200:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Tooltip (City,Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Tx rent par ville]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Tooltip (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Tx rent par ville]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Tooltip (City,Country,State)]</column>
            <column>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Tooltip (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:City:nk]</rows>
        <cols>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]</cols>
      </table>
      <simple-id uuid='{A9D11687-9E5C-4435-9252-19EB07C627BB}' />
    </worksheet>
    <worksheet name='Vente par categorie'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ventes par catégorie</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore_order' name='federated.0s29g4f0n682ro1d7o0ic0vx91hs' />
          </datasources>
          <datasource-dependencies datasource='federated.0s29g4f0n682ro1d7o0ic0vx91hs'>
            <column caption='Profit (Order ID)' datatype='boolean' name='[Calculation_715509434945552386]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='/*calcul renta si positif la cde est rentable*/&#13;&#10;{ FIXED [Order ID]: SUM([Profit]) }&gt;0' />
              <aliases>
                <alias key='false' value='Non rentable' />
                <alias key='true' value='Rentable' />
              </aliases>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_715509434945552386]' derivation='None' name='[none:Calculation_715509434945552386:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Order Date:qk]' included-values='in-range'>
            <min>#2014-01-03#</min>
            <max>#2017-12-30#</max>
          </filter>
          <slices>
            <column>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Sales:qk]' scope='rows' value='Ventes' />
            <format attr='title' class='0' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[tmn:Order Date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Sales:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
            <format attr='text-format' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Profit:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Calculation_715509434945552386:nk]' />
              <lod column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Category:nk] * [federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Sales:qk])</rows>
        <cols>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{9E9554A2-12A5-40F3-8D96-02AAFDF82F46}' />
    </worksheet>
    <worksheet name='kpi'>
      <layout-options>
        <title>
          <formatted-text>
            <run>KPI </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore_order' name='federated.0s29g4f0n682ro1d7o0ic0vx91hs' />
          </datasources>
          <datasource-dependencies datasource='federated.0s29g4f0n682ro1d7o0ic0vx91hs'>
            <column caption='Benef par cde' datatype='real' name='[Calculation_715509434950787076]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/COUNTD([Order ID])' />
            </column>
            <column caption='Vente par client' datatype='real' name='[Calculation_715509434951471109]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Sales])/COUNTD([Customer Name])' />
            </column>
            <column caption='Tx de rentabilité' datatype='real' name='[Calculation_879046395486003200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_715509434950787076]' derivation='User' name='[usr:Calculation_715509434950787076:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_715509434951471109]' derivation='User' name='[usr:Calculation_715509434951471109:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_879046395486003200]' derivation='User' name='[usr:Calculation_879046395486003200:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_715509434950787076:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_715509434951471109:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[avg:Discount:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]&quot;</bucket>
              <bucket>&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_715509434950787076:qk]&quot;</bucket>
              <bucket>&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_715509434951471109:qk]&quot;</bucket>
              <bucket>&quot;[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Quantity:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Sales:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
            <format attr='text-format' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Profit:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
            <format attr='text-format' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_715509434950787076:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
            <format attr='text-format' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_715509434951471109:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
            <format attr='text-format' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Quantity:qk]' value='N' />
            <format attr='text-format' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[avg:Discount:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{868B255F-7515-4F90-A2C7-2BC1CDB4FDA4}' />
    </worksheet>
    <worksheet name='segment'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ventes par catégorie</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore_order' name='federated.0s29g4f0n682ro1d7o0ic0vx91hs' />
          </datasources>
          <datasource-dependencies datasource='federated.0s29g4f0n682ro1d7o0ic0vx91hs'>
            <column caption='Profit (Order ID)' datatype='boolean' name='[Calculation_715509434945552386]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='/*calcul renta si positif la cde est rentable*/&#13;&#10;{ FIXED [Order ID]: SUM([Profit]) }&gt;0' />
              <aliases>
                <alias key='false' value='Non rentable' />
                <alias key='true' value='Rentable' />
              </aliases>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_715509434945552386]' derivation='None' name='[none:Calculation_715509434945552386:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Order Date:qk]' included-values='in-range'>
            <min>#2014-01-03#</min>
            <max>#2017-12-30#</max>
          </filter>
          <slices>
            <column>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Sales:qk]' scope='rows' value='Ventes' />
            <format attr='title' class='0' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[tmn:Order Date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Sales:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
            <format attr='text-format' field='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Profit:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Calculation_715509434945552386:nk]' />
              <lod column='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Segment:nk] * [federated.0s29g4f0n682ro1d7o0ic0vx91hs].[sum:Sales:qk])</rows>
        <cols>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{1BF99A63-9307-4B11-A4C0-6EA724E44157}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Presentation globale'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98166' id='8' param='horz' type-v2='layout-flow' w='99024' x='488' y='917'>
            <zone h='98166' id='6' type-v2='layout-basic' w='89268' x='488' y='917'>
              <zone h='12844' id='3' name='kpi' w='89268' x='488' y='917'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42661' id='5' name='Taux de rentabilité sur carte' w='89268' x='488' y='13761'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42661' id='10' name='Vente par categorie' w='44634' x='488' y='56422'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42661' id='12' name='segment' w='44634' x='45122' y='56422'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98166' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9756' x='89756' y='917'>
              <zone h='7454' id='9' name='Taux de rentabilité sur carte' pane-specification-id='0' param='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' type-v2='color' w='9756' x='89756' y='917'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7568' id='11' name='Vente par categorie' pane-specification-id='1' param='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Calculation_715509434945552386:nk]' type-v2='color' w='9756' x='89756' y='8371'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98166' id='15' param='vert' type-v2='layout-flow' w='99024' x='488' y='917'>
                <zone fixed-size='95' h='12844' id='3' is-fixed='true' name='kpi' w='89268' x='488' y='917'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42661' id='5' is-fixed='true' name='Taux de rentabilité sur carte' w='89268' x='488' y='13761'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7454' id='9' name='Taux de rentabilité sur carte' pane-specification-id='0' param='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' type-v2='color' w='9756' x='89756' y='917'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42661' id='10' is-fixed='true' name='Vente par categorie' w='44634' x='488' y='56422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7568' id='11' name='Vente par categorie' pane-specification-id='1' param='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Calculation_715509434945552386:nk]' type-v2='color' w='9756' x='89756' y='8371'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42661' id='12' is-fixed='true' name='segment' w='44634' x='45122' y='56422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{548CD921-7755-4701-A9EF-A88F11626840}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Taux de rentabilité par zone geographique'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='211'>
            <card pane-specification-id='0' param='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:City:nk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Country:nk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Postal Code:ok]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Region:nk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:State:nk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C349E81B-5FDE-4D6F-9580-6D2599EB87DF}' />
    </window>
    <window class='worksheet' name='Vente par categorie'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='212'>
            <card pane-specification-id='1' param='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Calculation_715509434945552386:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Calculation_715509434945552386:nk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Category:nk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Order Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DA8D63E-C48F-41D2-A188-095C2B50645C}' />
    </window>
    <window class='worksheet' name='segment'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='265'>
            <card pane-specification-id='1' param='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Calculation_715509434945552386:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Calculation_715509434945552386:nk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Category:nk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Order Date:qk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64D44E3C-4EF2-48CD-B958-E26DC544E330}' />
    </window>
    <window class='worksheet' name='kpi'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{68B53440-E6C1-48F0-AD4B-E69096BFCB93}' />
    </window>
    <window class='worksheet' name='Tx rent par ville'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='212'>
            <card pane-specification-id='0' param='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AFAFC400-58DD-4BEA-BB69-6AB50AB10EA8}' />
    </window>
    <window class='worksheet' name='Taux de rentabilité sur carte'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='263'>
            <card pane-specification-id='0' param='[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:City:nk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Country:nk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Postal Code:ok]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Region:nk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:State:nk]</field>
            <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A53DB898-38FB-405D-BAA7-208D7E3F97DC}' />
    </window>
    <window class='dashboard' maximized='true' name='Presentation globale'>
      <viewpoints>
        <viewpoint name='Taux de rentabilité sur carte'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Country:nk]</field>
                    <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:State:nk]</field>
                    <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Geometry (generated)]</field>
                    <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Latitude (generated)]</field>
                    <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[Longitude (generated)]</field>
                    <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[usr:Calculation_879046395486003200:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;POLYGON((-104.0487 49,-101.3625 49.0001,-98.9998 49.0001,-97.9502 49.0005,-97.2303 49,-97.2343 48.9474,-97.1901 48.8958,-97.1999 48.8817,-97.1739 48.8529,-97.1894 48.8144,-97.1578 48.8079,-97.1373 48.7264,-97.1101 48.7062,-97.0987 48.6592,-97.1185 48.6208,-97.1499 48.6125,-97.1624 48.5431,-97.1456 48.5381,-97.1617 48.4762,-97.1293 48.454,-97.1315 48.4066,-97.1633 48.392,-97.1555 48.3638,-97.1203 48.3271,-97.1355 48.2871,-97.1166 48.2797,-97.1483 48.2237,-97.1229 48.2165,-97.1467 48.1732,-97.1465 48.1441,-97.1095 48.1047,-97.0713 48.0458,-97.0536 47.9916,-97.0546 47.9463,-97.0178 47.9198,-97.0213 47.8726,-97.0054 47.8702,-96.9797 47.8094,-96.9353 47.7657,-96.9301 47.7183,-96.8869 47.6722,-96.8886 47.6385,-96.8512 47.5988,-96.8506 47.5542,-96.8681 47.5291,-96.8489 47.499,-96.8681 47.4793,-96.8559 47.44,-96.8718 47.4188,-96.8395 47.3996,-96.8585 47.3679,-96.8314 47.3397,-96.8442 47.2925,-96.8329 47.2376,-96.826 47.1546,-96.84 47.1505,-96.8163 47.1084,-96.8178 47.0523,-96.8334 47.0104,-96.8232 46.9715,-96.7918 46.9285,-96.7546 46.9149,-96.8025 46.8115,-96.7871 46.7857,-96.7811 46.722,-96.798 46.6303,-96.783 46.6304,-96.7504 46.584,-96.7397 46.487,-96.7135 46.4651,-96.666 46.3746,-96.5998 46.3292,-96.606 46.2939,-96.5836 46.2012,-96.5803 46.1517,-96.5592 46.105,-96.5569 46.0646,-96.5766 46.0218,-96.5637 45.9352,-97.9788 45.9359,-98.4143 45.9365,-99.0058 45.9397,-99.7181 45.9409,-100.5119 45.9437,-102.9957 45.9452,-104.0454 45.9453,-104.0454 47.3301,-104.0414 47.8627,-104.0441 47.9961,-104.0479 48.634,-104.0487 49))&quot;</value>
                  <value>47.5</value>
                  <value>-100.0</value>
                  <value>0.25018719222532637</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Vente par categorie'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0s29g4f0n682ro1d7o0ic0vx91hs].[none:Calculation_715509434945552386:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='kpi'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='segment'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{800B9B96-7209-4C62-A32F-F17D73105C60}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Presentation globale' width='192'>
      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
      7QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Taux de rentabilité par zone geographique' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Taux de rentabilité sur carte' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tx rent par ville' width='192'>
      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
      Awh9twBnjGI8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vente par categorie' width='192'>
      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
      /x+WolRVWr8W7QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='64' name='kpi' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='segment' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
